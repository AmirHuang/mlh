# Generated by Django 2.2 on 2019-04-02 02:54

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('news', '0001_initial'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile', models.CharField(default='', max_length=11, null=True, unique=True, verbose_name='手机号')),
                ('avatar', models.ImageField(default='./img/widget-photo.png', upload_to='', verbose_name='用户头像')),
                ('is_vip', models.BooleanField(default=False)),
                ('city', models.CharField(max_length=30, null=True, verbose_name='现居地址')),
                ('school', models.CharField(max_length=20, null=True, verbose_name='毕业学校')),
                ('experience', models.TextField(null=True, verbose_name='工作经历')),
                ('gender', models.SmallIntegerField(choices=[(0, 'male'), (1, 'female')], default=0, verbose_name='性别')),
                ('introduction', models.TextField(null=True, verbose_name='个人简介')),
                ('education', models.TextField(null=True, verbose_name='教育经历')),
                ('truename', models.CharField(max_length=5, null=True, verbose_name='真实姓名')),
                ('birth', models.DateTimeField(null=True, verbose_name='出生日期')),
                ('company', models.CharField(max_length=20, null=True, verbose_name='公司')),
                ('personurl', models.CharField(max_length=20, null=True, verbose_name='个人网址')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('like_news', models.ManyToManyField(default=False, related_name='followed_user', to='news.NewsModel', verbose_name='用户收藏的新闻')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'tb_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UsersRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followed_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followed', to=settings.AUTH_USER_MODEL, verbose_name='此用户被谁关注了')),
                ('follower_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower', to=settings.AUTH_USER_MODEL, verbose_name='此用户关注的用户')),
            ],
            options={
                'verbose_name': '用户关注关系',
                'verbose_name_plural': '用户关注关系',
                'db_table': 'tb_follower',
            },
        ),
        migrations.CreateModel(
            name='GoodAt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=10, null=True, verbose_name='技能')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='good_at', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户技能',
                'verbose_name_plural': '用户技能',
                'db_table': 'tb_good_at',
            },
        ),
    ]
